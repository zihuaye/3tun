*** vtun-3.0.2.orig/lfd_encrypt.c	2021-05-23 01:02:18.121944975 +0800
--- vtun-3.0.2/lfd_encrypt.c	2021-05-23 21:15:52.526125140 +0800
***************
*** 56,61 ****
--- 56,62 ----
  #include <openssl/md5.h>
  #include <openssl/blowfish.h>
  #include <openssl/rand.h>
+ #include <openssl/engine.h>
  
  /*
   * #define LFD_ENCRYPT_DEBUG
***************
*** 95,105 ****
  char * pkey;
  char * iv_buf;
  
! EVP_CIPHER_CTX ctx_enc;	/* encrypt */
! EVP_CIPHER_CTX ctx_dec;	/* decrypt */
  
! EVP_CIPHER_CTX ctx_enc_ecb;	/* sideband ecb encrypt */
! EVP_CIPHER_CTX ctx_dec_ecb;	/* sideband ecb decrypt */
  
  int prep_key(char **key, int size, struct vtun_host *host)
  {
--- 96,106 ----
  char * pkey;
  char * iv_buf;
  
! EVP_CIPHER_CTX *ctx_enc;	/* encrypt */
! EVP_CIPHER_CTX *ctx_dec;	/* decrypt */
  
! EVP_CIPHER_CTX *ctx_enc_ecb;	/* sideband ecb encrypt */
! EVP_CIPHER_CTX *ctx_dec_ecb;	/* sideband ecb decrypt */
  
  int prep_key(char **key, int size, struct vtun_host *host)
  {
***************
*** 151,156 ****
--- 152,165 ----
     EVP_CIPHER_CTX *pctx_enc;
     EVP_CIPHER_CTX *pctx_dec;
  
+    ENGINE_load_builtin_engines();
+    ENGINE_register_all_complete();
+ 
+    ctx_enc = EVP_CIPHER_CTX_new();
+    ctx_dec = EVP_CIPHER_CTX_new();
+    ctx_enc_ecb = EVP_CIPHER_CTX_new();
+    ctx_dec_ecb = EVP_CIPHER_CTX_new();
+ 
     enc_init_first_time = 1;   
     dec_init_first_time = 1;   
  
***************
*** 177,191 ****
           keysize = 32;
           sb_init = 1;
           cipher_type = EVP_aes_256_ecb();
!          pctx_enc = &ctx_enc_ecb;
!          pctx_dec = &ctx_dec_ecb;
        break;
        
        case VTUN_ENC_AES256ECB:
           blocksize = 16;
           keysize = 32;
!          pctx_enc = &ctx_enc;
!          pctx_dec = &ctx_dec;
           cipher_type = EVP_aes_256_ecb();
           strcpy(cipher_name,"AES-256-ECB");
        break;      
--- 186,200 ----
           keysize = 32;
           sb_init = 1;
           cipher_type = EVP_aes_256_ecb();
!          pctx_enc = ctx_enc_ecb;
!          pctx_dec = ctx_dec_ecb;
        break;
        
        case VTUN_ENC_AES256ECB:
           blocksize = 16;
           keysize = 32;
!          pctx_enc = ctx_enc;
!          pctx_dec = ctx_dec;
           cipher_type = EVP_aes_256_ecb();
           strcpy(cipher_name,"AES-256-ECB");
        break;      
***************
*** 196,209 ****
           keysize = 16;
           sb_init=1;
           cipher_type = EVP_aes_128_ecb();
!          pctx_enc = &ctx_enc_ecb;
!          pctx_dec = &ctx_dec_ecb;
        break;
        case VTUN_ENC_AES128ECB:
           blocksize = 16;
           keysize = 16;
!          pctx_enc = &ctx_enc;
!          pctx_dec = &ctx_dec;
           cipher_type = EVP_aes_128_ecb();
           strcpy(cipher_name,"AES-128-ECB");
        break;
--- 205,218 ----
           keysize = 16;
           sb_init=1;
           cipher_type = EVP_aes_128_ecb();
!          pctx_enc = ctx_enc_ecb;
!          pctx_dec = ctx_dec_ecb;
        break;
        case VTUN_ENC_AES128ECB:
           blocksize = 16;
           keysize = 16;
!          pctx_enc = ctx_enc;
!          pctx_dec = ctx_dec;
           cipher_type = EVP_aes_128_ecb();
           strcpy(cipher_name,"AES-128-ECB");
        break;
***************
*** 216,231 ****
           var_key = 1;
           sb_init = 1;
           cipher_type = EVP_bf_ecb();
!          pctx_enc = &ctx_enc_ecb;
!          pctx_dec = &ctx_dec_ecb;
        break;
  
        case VTUN_ENC_BF256ECB:
           blocksize = 8;
           keysize = 32;
           var_key = 1;
!          pctx_enc = &ctx_enc;
!          pctx_dec = &ctx_dec;
           cipher_type = EVP_bf_ecb();
           strcpy(cipher_name,"Blowfish-256-ECB");
        break;
--- 225,240 ----
           var_key = 1;
           sb_init = 1;
           cipher_type = EVP_bf_ecb();
!          pctx_enc = ctx_enc_ecb;
!          pctx_dec = ctx_dec_ecb;
        break;
  
        case VTUN_ENC_BF256ECB:
           blocksize = 8;
           keysize = 32;
           var_key = 1;
!          pctx_enc = ctx_enc;
!          pctx_dec = ctx_dec;
           cipher_type = EVP_bf_ecb();
           strcpy(cipher_name,"Blowfish-256-ECB");
        break;
***************
*** 238,253 ****
           var_key = 1;
           sb_init = 1;
           cipher_type = EVP_bf_ecb();
!          pctx_enc = &ctx_enc_ecb;
!          pctx_dec = &ctx_dec_ecb;
        break;
        case VTUN_ENC_BF128ECB: /* blowfish 128 ecb is the default */
        default:
           blocksize = 8;
           keysize = 16;
           var_key = 1;
!          pctx_enc = &ctx_enc;
!          pctx_dec = &ctx_dec;
           cipher_type = EVP_bf_ecb();
           strcpy(cipher_name,"Blowfish-128-ECB");
        break;
--- 247,262 ----
           var_key = 1;
           sb_init = 1;
           cipher_type = EVP_bf_ecb();
!          pctx_enc = ctx_enc_ecb;
!          pctx_dec = ctx_dec_ecb;
        break;
        case VTUN_ENC_BF128ECB: /* blowfish 128 ecb is the default */
        default:
           blocksize = 8;
           keysize = 16;
           var_key = 1;
!          pctx_enc = ctx_enc;
!          pctx_dec = ctx_dec;
           cipher_type = EVP_bf_ecb();
           strcpy(cipher_name,"Blowfish-128-ECB");
        break;
***************
*** 289,298 ****
     lfd_free(enc_buf); enc_buf = NULL;
     lfd_free(dec_buf); dec_buf = NULL;
  
!    EVP_CIPHER_CTX_cleanup(&ctx_enc);
!    EVP_CIPHER_CTX_cleanup(&ctx_dec);
!    EVP_CIPHER_CTX_cleanup(&ctx_enc_ecb);
!    EVP_CIPHER_CTX_cleanup(&ctx_dec_ecb);
  
     return 0;
  }
--- 298,309 ----
     lfd_free(enc_buf); enc_buf = NULL;
     lfd_free(dec_buf); dec_buf = NULL;
  
!    EVP_CIPHER_CTX_cleanup(ctx_enc);
!    EVP_CIPHER_CTX_cleanup(ctx_dec);
!    EVP_CIPHER_CTX_cleanup(ctx_enc_ecb);
!    EVP_CIPHER_CTX_cleanup(ctx_dec_ecb);
! 
!    ENGINE_cleanup();
  
     return 0;
  }
***************
*** 318,324 ****
     outlen=len+pad;
     if (pad == blocksize)
        RAND_bytes(in_ptr+len, blocksize-1);
!    EVP_EncryptUpdate(&ctx_enc, out_ptr, &outlen, in_ptr, len+pad);
     *out = enc_buf;
  
     sequence_num++;
--- 329,335 ----
     outlen=len+pad;
     if (pad == blocksize)
        RAND_bytes(in_ptr+len, blocksize-1);
!    EVP_EncryptUpdate(ctx_enc, out_ptr, &outlen, in_ptr, len+pad);
     *out = enc_buf;
  
     sequence_num++;
***************
*** 338,344 ****
  
     outlen=len;
     if (!len) return 0;
!    EVP_DecryptUpdate(&ctx_dec, out_ptr, &outlen, in_ptr, len);
     recv_ib_mesg(&outlen, &out_ptr);
     if (!outlen) return 0;
     tmp_ptr = out_ptr + outlen; tmp_ptr--;
--- 349,355 ----
  
     outlen=len;
     if (!len) return 0;
!    EVP_DecryptUpdate(ctx_dec, out_ptr, &outlen, in_ptr, len);
     recv_ib_mesg(&outlen, &out_ptr);
     if (!outlen) return 0;
     tmp_ptr = out_ptr + outlen; tmp_ptr--;
***************
*** 426,438 ****
        break;
     } /* switch(cipher) */
  
!    EVP_CIPHER_CTX_init(&ctx_enc);
!    EVP_EncryptInit_ex(&ctx_enc, cipher_type, NULL, NULL, NULL);
     if (var_key)
!       EVP_CIPHER_CTX_set_key_length(&ctx_enc, keysize);
!    EVP_EncryptInit_ex(&ctx_enc, NULL, NULL, pkey, NULL);
!    EVP_EncryptInit_ex(&ctx_enc, NULL, NULL, NULL, iv);
!    EVP_CIPHER_CTX_set_padding(&ctx_enc, 0);
     if (enc_init_first_time)
     {
        sprintf(tmpstr,"%s encryption initialized", cipher_name);
--- 437,449 ----
        break;
     } /* switch(cipher) */
  
!    EVP_CIPHER_CTX_init(ctx_enc);
!    EVP_EncryptInit_ex(ctx_enc, cipher_type, NULL, NULL, NULL);
     if (var_key)
!       EVP_CIPHER_CTX_set_key_length(ctx_enc, keysize);
!    EVP_EncryptInit_ex(ctx_enc, NULL, NULL, pkey, NULL);
!    EVP_EncryptInit_ex(ctx_enc, NULL, NULL, NULL, iv);
!    EVP_CIPHER_CTX_set_padding(ctx_enc, 0);
     if (enc_init_first_time)
     {
        sprintf(tmpstr,"%s encryption initialized", cipher_name);
***************
*** 516,528 ****
        break;
     } /* switch(cipher) */
  
!    EVP_CIPHER_CTX_init(&ctx_dec);
!    EVP_DecryptInit_ex(&ctx_dec, cipher_type, NULL, NULL, NULL);
     if (var_key)
!       EVP_CIPHER_CTX_set_key_length(&ctx_dec, keysize);
!    EVP_DecryptInit_ex(&ctx_dec, NULL, NULL, pkey, NULL);
!    EVP_DecryptInit_ex(&ctx_dec, NULL, NULL, NULL, iv);
!    EVP_CIPHER_CTX_set_padding(&ctx_dec, 0);
     if (dec_init_first_time)
     {
        sprintf(tmpstr,"%s decryption initialized", cipher_name);
--- 527,539 ----
        break;
     } /* switch(cipher) */
  
!    EVP_CIPHER_CTX_init(ctx_dec);
!    EVP_DecryptInit_ex(ctx_dec, cipher_type, NULL, NULL, NULL);
     if (var_key)
!       EVP_CIPHER_CTX_set_key_length(ctx_dec, keysize);
!    EVP_DecryptInit_ex(ctx_dec, NULL, NULL, pkey, NULL);
!    EVP_DecryptInit_ex(ctx_dec, NULL, NULL, NULL, iv);
!    EVP_CIPHER_CTX_set_padding(ctx_dec, 0);
     if (dec_init_first_time)
     {
        sprintf(tmpstr,"%s decryption initialized", cipher_name);
***************
*** 554,560 ****
  
           in_ptr = in - blocksize*2;
           outlen = blocksize*2;
!          EVP_EncryptUpdate(&ctx_enc_ecb, in_ptr, 
              &outlen, in_ptr, blocksize*2);
           *out = in_ptr;
           len = outlen;
--- 565,571 ----
  
           in_ptr = in - blocksize*2;
           outlen = blocksize*2;
!          EVP_EncryptUpdate(ctx_enc_ecb, in_ptr, 
              &outlen, in_ptr, blocksize*2);
           *out = in_ptr;
           len = outlen;
***************
*** 581,587 ****
           in_ptr = in;
           iv = malloc(blocksize);
           outlen = blocksize*2;
!          EVP_DecryptUpdate(&ctx_dec_ecb, in_ptr, &outlen, in_ptr, blocksize*2);
           
           if ( !strncmp(in_ptr, "ivec", 4) )
           {
--- 592,598 ----
           in_ptr = in;
           iv = malloc(blocksize);
           outlen = blocksize*2;
!          EVP_DecryptUpdate(ctx_dec_ecb, in_ptr, &outlen, in_ptr, blocksize*2);
           
           if ( !strncmp(in_ptr, "ivec", 4) )
           {
***************
*** 624,630 ****
                 if (cipher_enc_state != CIPHER_INIT)
                 {
                    cipher_enc_state = CIPHER_INIT;
!                   EVP_CIPHER_CTX_cleanup(&ctx_enc);
  #ifdef LFD_ENCRYPT_DEBUG
                    vtun_syslog(LOG_INFO, 
                       "Forcing local encryptor re-init");
--- 635,641 ----
                 if (cipher_enc_state != CIPHER_INIT)
                 {
                    cipher_enc_state = CIPHER_INIT;
!                   EVP_CIPHER_CTX_cleanup(ctx_enc);
  #ifdef LFD_ENCRYPT_DEBUG
                    vtun_syslog(LOG_INFO, 
                       "Forcing local encryptor re-init");
***************
*** 705,711 ****
           if (cipher_enc_state != CIPHER_INIT)
           {
              cipher_enc_state = CIPHER_INIT;
!             EVP_CIPHER_CTX_cleanup(&ctx_enc);
           }
  #ifdef LFD_ENCRYPT_DEBUG
           vtun_syslog(LOG_INFO, "Remote requests encryptor re-init");
--- 716,722 ----
           if (cipher_enc_state != CIPHER_INIT)
           {
              cipher_enc_state = CIPHER_INIT;
!             EVP_CIPHER_CTX_cleanup(ctx_enc);
           }
  #ifdef LFD_ENCRYPT_DEBUG
           vtun_syslog(LOG_INFO, "Remote requests encryptor re-init");
***************
*** 719,725 ****
               cipher_enc_state != CIPHER_REQ_INIT &&
               cipher_enc_state != CIPHER_INIT)
           {
!             EVP_CIPHER_CTX_cleanup (&ctx_dec);
              cipher_dec_state = CIPHER_INIT;
              cipher_enc_state = CIPHER_REQ_INIT;
           }
--- 730,736 ----
               cipher_enc_state != CIPHER_REQ_INIT &&
               cipher_enc_state != CIPHER_INIT)
           {
!             EVP_CIPHER_CTX_cleanup (ctx_dec);
              cipher_dec_state = CIPHER_INIT;
              cipher_enc_state = CIPHER_REQ_INIT;
           }
